{"version":3,"sources":["util.js","components/BalanceInput.js","components/accounts/accountStruct.js","components/buckets/BucketForm.js","components/buckets/bucketStruct.js","components/buckets/BucketView.js","components/buckets/Buckets.js","components/accounts/AccountForm.js","components/notes/NoteForm.js","components/notes/noteStruct.js","components/notes/Notes.js","components/accounts/Accounts.js","components/schedule/BillForm.js","components/schedule/billStruct.js","components/schedule/SettingsForm.js","components/schedule/settingsStruct.js","components/schedule/BillSchedule.js","components/year/BigPicture.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["THEME","light","dark","primary","secondary","AppTheme","createContext","Credit","styled","p","Debit","Info","div","asMoney","value","num","str","Math","ceil","dollar","slice","full","getNextPayDate","basePayDate","date","inclusive","dayDiff","floor","getTime","getDate","getDebitBefore","bills","start","end","month","filter","b","length","includes","reduce","prev","curr","debit","BalanceInput","onUpdate","useState","expand","setExpand","n","setN","calc","mult","justify","align","Input","onChange","e","target","style","width","type","startAdornment","theme","onClick","className","placeholder","HelperInput","input","accountStruct","title","predicate","FOAF","parse","getStringNoLocale","set","setStringNoLocale","balance","VCARD","focus","getBoolean","setBoolean","BucketForm","accounts","onSubmit","useContext","bucket","updateBucket","handleChange","field","flex","FormControl","fullWidth","InputLabel","Select","account","label","map","MenuItem","FormGroup","FormControlLabel","control","Checkbox","pinned","checked","color","Button","variant","bucketStruct","name","BucketView","updateBalance","onDelete","editMode","setEditMode","some","a","IconButton","Error","Buckets","SaveState","updateQueue","queue","dataset","setDataset","setBuckets","isAdding","setIsAdding","show","setShow","buckets","updateBuckets","setAccounts","initThing","thing","deleteBucket","i","findIndex","url","deleteThing","toggle","setAttr","addToUpdateQueue","updatedList","sort","useEffect","bucketData","loadAllByName","localeCompare","Container","AccountForm","updateAccount","ACTION_TYPES","NONE","UPDATE","TRANSFER","NoteForm","actionType","note","updateNote","updateAccounts","numeric","bank","Object","entries","height","notebookStruct","notes","Document","getAndParse","stringifyAndSet","Notes","notebook","updateNotes","removeNote","updatedBook","setAllAttr","accountURL","struct","indexOf","loadByName","complete","updates","q","data","NoteCard","text","Accounts","updateEditMode","acc","saved","bucketSum","details","margin","Badge","badgeContent","invisible","AccountItem","thin","list","bucketObject","Months","BillForm","bill","updateBill","monthly","setMonthly","min","max","toggleMonth","m","billStruct","Date","inactive","hasSource","SettingsForm","savedSettings","settings","updateSettings","payday","paycheck","marginTop","settingsStruct","BillSchedule","danger","setDanger","editSettings","setEditSettings","updateBills","primaryBuckets","updatePrimaryBuckets","now","s","saveThing","find","daysAdded","sum","next","runningBalance","minBalance","paydays","d","setDate","days","push","credit","getMonth","buildPayDays","readout","currDate","dailyBills","ScheduleRow","DateText","join","override","toggleBill","deleteBill","nextPayday","availableFunds","Display","buildSchedule","MONTHS","BigPicture","counter","getPaydayCount","totalCredit","totalDebit","Decoration","round","buildReadout","span","Dashboard","user","saveFromQ","mui","Layout","to","Content","ui","save","muiTheme","newTheme","App","err","setError","setUser","profile","setProfile","edit","toggleEdit","res","getUser","handleIncomingRedirect","getDefaultSession","info","isLoggedIn","webId","appLogin","loadThing","profileStruct","then","console","error","loadDataset","getDomain","Provider","path","element","Consumer","saveState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.738af2a4.chunk.js","sourcesContent":["import { createContext } from \"react\"\nimport styled from \"styled-components\"\n\n// https://poolors.com/4c1e81-0787a2-795a3f-e6cad4\nexport const THEME = {\n  light: '#e6cad4',\n  dark: '#795a3f',\n  primary: '#4c1e81',\n  secondary: '#0787a2'\n}\n\nexport const AppTheme = createContext(THEME)\n\nexport const Credit = styled.p`\n  color: green;\n  margin: .1em;\n  `\n\nexport const Debit = styled.p`\n  color: red;\n  margin: .1em;\n`\n\nexport const Info = styled.div`\n  display: flex;\n  align-items: center;\n  font-style: italic;\n  opacity: .5;\n  margin-top: .5em;\n`\n\nexport function asMoney(value) {\n  let num = +(value);\n  let str = Math.ceil(num * 100) + \"\";\n  return {\n    dollar: str.slice(0, -2),\n    full: `${ str.slice(0, -2) }.${ str.slice(-2) }`,\n    ceil: () => +str.slice(0, -2) + 1\n  }\n}\n\nexport function getNextPayDate(basePayDate, date, inclusive) {\n  let dayDiff = Math.floor((date.getTime() - basePayDate.getTime()) / 86400000) % 14;\n  return !dayDiff && inclusive ? date.getDate() : date.getDate() + 14 - dayDiff;\n}\n\nexport function getDebitBefore(bills, start, end, month) {\n  return bills\n    .filter(b => (+b.date >= start && +b.date <= end) && (!b.month || !b.month.length || b.month.includes(month)))\n    .reduce((prev, curr) => +curr.debit + prev, 0)\n}","import { Input } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { Column, Row, Icon } from \"solid-core/dist/components/styled\"\nimport styled from \"styled-components\";\nimport { THEME } from \"../util\"\n\nconst BalanceInput = ({ value, onUpdate }) => {\n\n  const [expand, setExpand] = useState(false)\n  const [n, setN] = useState(0)\n\n  function calc(mult) {\n    return () => {\n      onUpdate(+value + (+n * mult));\n      setN(0)\n    }\n  }\n\n  return (\n    <Column>\n      <Row justify=\"flex-end\" align=\"center\">\n        <Input\n          value={ value || 0 }\n          onChange={ e => onUpdate(e.target.value) }\n          style={ { width: \"7em\" } }\n          type=\"number\"\n          startAdornment={\n            <Icon theme={ THEME } onClick={ () => setExpand(!expand) } className=\"material-icons\">calculate</Icon>\n          }\n          placeholder=\"balance\" />\n      </Row>\n      {\n        expand &&\n        <Row align=\"center\" justify=\"flex-end\">\n          <Icon onClick={ calc(1) } className=\"material-icons\">add</Icon>\n          <HelperInput value={ n } onChange={ e => setN(e.target.value) } type=\"number\" />\n          <Icon theme={ THEME } onClick={ calc(-1) } className=\"material-icons\">remove</Icon>\n        </Row>\n      }\n    </Column>\n  )\n}\n\nexport default BalanceInput;\n\nconst HelperInput = styled.input`\n  border: none;\n  background: whitesmoke;\n  border-radius: 5px;\n  width: 50px;\n  margin: 10px 0px;\n  padding: 5px;\n  font-size: .7em;\n`","import { getBoolean, getStringNoLocale, setBoolean, setStringNoLocale } from \"@inrupt/solid-client\";\nimport { FOAF, VCARD } from \"@inrupt/vocab-common-rdf\";\n\nexport const accountStruct = {\n  title: {\n    predicate: FOAF.title,\n    parse: getStringNoLocale,\n    set: setStringNoLocale\n  },\n  balance: {\n    predicate: VCARD.value,\n    parse: getStringNoLocale,\n    set: setStringNoLocale\n  },\n  primary: {\n    predicate: FOAF.focus,\n    parse: getBoolean,\n    set: setBoolean\n  }\n}","import { Button, Checkbox, FormControl, FormControlLabel, FormGroup, Input, InputLabel, MenuItem, Select } from \"@material-ui/core\"\nimport { useContext, useState } from \"react\";\nimport { Column, Divider, Row, CardHeader } from \"solid-core/dist/components/styled\";\nimport { AppTheme } from \"../../util\";\n\nconst BucketForm = ({ accounts, onSubmit }) => {\n\n  const THEME = useContext(AppTheme)\n  const [bucket, updateBucket] = useState({});\n\n  function handleChange(field) {\n    return e => {\n      updateBucket({ ...bucket, [field]: e.target.value })\n    }\n  }\n\n  function togglePinned(e) {\n    updateBucket({ ...bucket, pinned: e.target.checked })\n  }\n\n  return (\n    <Column>\n      <CardHeader>New Bucket</CardHeader>\n      <Divider theme={ THEME } />\n      <Row>\n        <Input onChange={ handleChange(\"name\") } style={ { flex: 2 } } placeholder=\"name\" />\n        <Input onChange={ handleChange(\"balance\") } style={ { flex: 1 } } type=\"number\" placeholder=\"balance\" />\n      </Row>\n      <FormControl fullWidth>\n        <InputLabel>Account</InputLabel>\n        <Select value={ bucket.account || \"\" } label=\"Account\" onChange={ handleChange(\"account\") }>\n          {\n            accounts.map(({ title }) => <MenuItem key={ title } value={ title }>{ title }</MenuItem>)\n          }\n        </Select>\n      </FormControl>\n      <FormGroup>\n        <FormControlLabel control={ <Checkbox onChange={ togglePinned } color=\"secondary\" /> } label=\"Pinned\" />\n      </FormGroup>\n      <Button onClick={ () => onSubmit(bucket) } variant=\"outlined\" color=\"secondary\">Add</Button>\n    </Column>\n  )\n}\n\nexport default BucketForm;","import { getBoolean, getStringNoLocale, setBoolean, setStringNoLocale } from \"@inrupt/solid-client\";\nimport { FOAF, VCARD } from \"@inrupt/vocab-common-rdf\";\n\nexport const bucketStruct = {\n  name: {\n    predicate: FOAF.name,\n    parse: getStringNoLocale,\n    set: setStringNoLocale\n  },\n  account: {\n    predicate: FOAF.account,\n    parse: getStringNoLocale,\n    set: setStringNoLocale\n  },\n  balance: {\n    predicate: VCARD.value,\n    parse: getStringNoLocale,\n    set: setStringNoLocale\n  },\n  pinned: {\n    predicate: FOAF.focus,\n    parse: getBoolean,\n    set: setBoolean\n  }\n}","import { FormControl, IconButton, Input, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { Card, Column, Divider, Row, Spacer, Subtitle, CardHeader } from \"solid-core/dist/components/styled\";\nimport { THEME } from \"../../util\";\nimport styled from \"styled-components\";\nimport BalanceInput from \"../BalanceInput\";\n\nconst BucketView = ({ bucket, onUpdate, updateBalance, accounts, onDelete }) => {\n\n  const [editMode, setEditMode] = useState(false)\n\n  return (\n    <Card>\n      <Row>\n        {\n          !editMode ?\n            <Column>\n              <CardHeader>{ bucket.name }</CardHeader>\n              {\n                accounts.some(a => a.title === bucket.account) ?\n                  <Subtitle>{ bucket.account }</Subtitle>\n                  : <Error>No Valid Account</Error>\n              }\n            </Column>\n            :\n            <Column>\n              <Input value={ bucket.name } onChange={ onUpdate(bucket, 'name') } />\n              <FormControl>\n                <InputLabel>Account</InputLabel>\n                <Select value={ bucket.account || \"\" } label=\"Account\" onChange={ onUpdate(bucket, \"account\") }>\n                  {\n                    accounts.map(({ title }) => <MenuItem key={ title } value={ title }>{ title }</MenuItem>)\n                  }\n                </Select>\n              </FormControl>\n            </Column>\n        }\n        <Spacer />\n        <IconButton onClick={ () => setEditMode(!editMode) } color=\"primary\">\n          <span className=\"material-icons\">{ editMode ? 'close' : 'edit' }</span>\n        </IconButton>\n        {\n          editMode ?\n            <IconButton onClick={ () => onDelete(bucket) } color=\"secondary\">\n              <span className=\"material-icons\">delete</span>\n            </IconButton>\n            : <IconButton onClick={ onUpdate(bucket, \"pinned\", true) } color=\"primary\">\n              <span className=\"material-icons\">{ bucket.pinned ? 'star' : 'star_outline' }</span>\n            </IconButton>\n        }\n      </Row>\n      <Divider theme={ THEME } />\n      <Row justify=\"flex-end\">\n        <BalanceInput value={ bucket.balance } onUpdate={ (value) => updateBalance(bucket, value) } />\n      </Row>\n    </Card>\n  )\n}\n\nexport default BucketView;\n\nconst Error = styled.p`\n  color: red;\n`","import { IconButton } from \"@material-ui/core\"\nimport { useContext, useEffect, useState } from \"react\"\nimport { Card, Row, Spacer, CardHeader } from \"solid-core/dist/components/styled\"\nimport { addToUpdateQueue, deleteThing, initThing, loadAllByName, SaveState, setAttr } from \"solid-core/dist/pods\"\nimport styled from \"styled-components\"\nimport { accountStruct } from \"../accounts/accountStruct\"\nimport BucketForm from \"./BucketForm\"\nimport { bucketStruct } from \"./bucketStruct\"\nimport BucketView from \"./BucketView\"\n\nconst Buckets = ({ onUpdate }) => {\n\n  const { updateQueue, queue, dataset, setDataset, setBuckets } = useContext(SaveState)\n\n  const [isAdding, setIsAdding] = useState(false)\n  const [show, setShow] = useState(false)\n  const [buckets, updateBuckets] = useState([])\n  const [accounts, setAccounts] = useState([])\n\n  useEffect(() => {\n    if (!dataset) return\n    let bucketData = loadAllByName(dataset, 'bucket', bucketStruct);\n    setBuckets(bucketData)\n    updateBuckets(\n      bucketData\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .sort(a => a.pinned ? -1 : 0)\n    )\n    setAccounts(loadAllByName(dataset, 'account', accountStruct))\n  }, [dataset, setBuckets])\n\n  async function addBucket(b) {\n    setIsAdding(false)\n    let { dataset, thing } = await initThing('bucket', b, bucketStruct)\n    b = { ...b, thing }\n    updateBuckets(b.pinned ? [b, ...buckets] : [...buckets, b])\n    onUpdate([...buckets, b])\n    setDataset(dataset)\n  }\n\n  async function deleteBucket(bucket) {\n    let i = buckets.findIndex(b => b.thing.url === bucket.thing.url)\n    await deleteThing(bucket.thing)\n    updateBuckets([...buckets.slice(0, i), ...buckets.slice(i + 1)])\n    onUpdate([...buckets.slice(0, i), ...buckets.slice(i + 1)])\n  }\n\n  function updateBucket(bucket, field, toggle) {\n    let i = buckets.findIndex(b => b.thing.url === bucket.thing.url)\n    return e => {\n      let value = toggle ? !bucket[field] : e.target.value;\n      let thing = setAttr(bucket.thing, bucketStruct[field], value)\n      updateQueue(addToUpdateQueue(queue, thing))\n      let updatedList = [...buckets.slice(0, i), { ...bucket, [field]: value, thing }, ...buckets.slice(i + 1)];\n      if (toggle) updatedList = updatedList.sort(a => a.pinned ? -1 : 0)\n      updateBuckets(updatedList)\n      onUpdate(updatedList)\n    }\n  }\n\n  function updateBalance(bucket, value) {\n    let i = buckets.findIndex(b => b.thing.url === bucket.thing.url)\n    let thing = setAttr(bucket.thing, bucketStruct.balance, value)\n    updateQueue(addToUpdateQueue(queue, thing))\n    updateBuckets(\n      [...buckets.slice(0, i),\n      { ...bucket, balance: value, thing },\n      ...buckets.slice(i + 1)]\n    )\n    onUpdate(\n      [...buckets.slice(0, i),\n      { ...bucket, balance: value, thing },\n      ...buckets.slice(i + 1)]\n    )\n  }\n\n  return (\n    <Container>\n      <Row align=\"center\">\n        <CardHeader>{ buckets.length } Buckets</CardHeader>\n        <Spacer />\n        <IconButton onClick={ () => setShow(!show) } color=\"primary\">\n          <span className=\"material-icons\">{ show ? 'visibility_off' : 'visibility' }</span>\n        </IconButton>\n        <IconButton onClick={ () => setIsAdding(!isAdding) } color=\"primary\">\n          <span className=\"material-icons\">{ isAdding ? 'close' : 'add' }</span>\n        </IconButton>\n      </Row>\n      {\n        isAdding &&\n        <Card>\n          <BucketForm accounts={ accounts } onSubmit={ addBucket } />\n        </Card>\n      }\n      {\n        show &&\n        buckets.map(b => <BucketView key={ b.thing.url } bucket={ b } onUpdate={ updateBucket } accounts={ accounts } updateBalance={ updateBalance } onDelete={ deleteBucket } />)\n      }\n    </Container>\n  )\n}\n\nexport default Buckets;\n\nconst Container = styled.div`\n  width: 90%;\n`","import { Button, Checkbox, FormControlLabel, FormGroup, Input } from \"@material-ui/core\"\nimport { useState } from \"react\";\nimport { Column, Row } from \"solid-core/dist/components/styled\";\n\nconst AccountForm = ({ onSubmit }) => {\n\n  const [account, updateAccount] = useState({});\n\n  function handleChange(field) {\n    return e => {\n      updateAccount({ ...account, [field]: e.target.value })\n    }\n  }\n\n  function togglePrimary(e) {\n    updateAccount({ ...account, primary: e.target.checked })\n  }\n\n  return (\n    <Column>\n      <Row>\n        <Input onChange={ handleChange(\"title\") } style={ { flex: 2 } } placeholder=\"title\" />\n        <Input onChange={ handleChange(\"balance\") } style={ { flex: 1 } } type=\"number\" placeholder=\"balance\" />\n      </Row>\n      <FormGroup>\n        <FormControlLabel control={ <Checkbox onChange={ togglePrimary } color=\"secondary\" /> } label=\"Primary\" />\n      </FormGroup>\n      <Button onClick={ () => onSubmit(account) } variant=\"outlined\" color=\"secondary\">Add</Button>\n    </Column>\n  )\n}\n\nexport default AccountForm;","import { Button, FormControl, Input, InputLabel, MenuItem, Select } from \"@material-ui/core\"\nimport { useContext, useEffect, useState } from \"react\";\nimport { Column, Divider, CardHeader, Spacer, Row } from \"solid-core/dist/components/styled\";\nimport { loadAllByName } from \"solid-core/dist/pods\";\nimport { AppTheme } from \"../../util\";\nimport { accountStruct } from \"../accounts/accountStruct\";\nimport { bucketStruct } from \"../buckets/bucketStruct\";\n\nexport const ACTION_TYPES = {\n  NONE: \"NONE\",\n  UPDATE: \"UPDATE\",\n  TRANSFER: \"TRANSFER\"\n}\n\nconst NoteForm = ({ dataset, onSubmit }) => {\n\n  const THEME = useContext(AppTheme)\n  const [note, updateNote] = useState({ actionType: ACTION_TYPES.NONE });\n  const [accounts, updateAccounts] = useState([]);\n\n  useEffect(() => {\n    if (!dataset) return\n    let bank = loadAllByName(dataset, 'account', accountStruct);\n    let buckets = loadAllByName(dataset, 'bucket', bucketStruct);\n    updateAccounts([...bank, ...buckets])\n  }, [dataset])\n\n  function handleChange(field, numeric) {\n    return e => {\n      updateNote({ ...note, [field]: numeric ? +e.target.value : e.target.value })\n    }\n  }\n\n  return (\n    <Column width='95%'>\n      <CardHeader>New Note</CardHeader>\n      <Divider theme={ THEME } />\n      <Input onChange={ handleChange(\"text\") } placeholder=\"Take a note.\" />\n      <Row>\n        <FormControl>\n          <InputLabel>Action</InputLabel>\n          <Select value={ note.actionType } label=\"Action\" onChange={ handleChange(\"actionType\") }>\n            {\n              Object.entries(ACTION_TYPES).map(([_, value]) => <MenuItem key={ value } value={ value }>{ value }</MenuItem>)\n            }\n          </Select>\n        </FormControl>\n        <Spacer />\n        {\n          note.actionType !== ACTION_TYPES.NONE &&\n          <Input onChange={ handleChange('value', true) } type=\"number\" placeholder=\"value\" />\n        }\n      </Row>\n      {\n        note.actionType !== ACTION_TYPES.NONE\n        &&\n        <Row>\n          <FormControl fullWidth>\n            <InputLabel>Account</InputLabel>\n            <Select value={ note.account || \"\" } label=\"Account\" onChange={ handleChange('account') }>\n              {\n                accounts.map((a) => <MenuItem key={ a.thing.url } value={ a.thing.url }>{ a.title || a.name }</MenuItem>)\n              }\n            </Select>\n          </FormControl>\n          {\n            note.actionType === ACTION_TYPES.TRANSFER\n            &&\n            <FormControl fullWidth>\n              <InputLabel>Account</InputLabel>\n              <Select value={ note.target || \"\" } label=\"Target\" onChange={ handleChange('target') }>\n                {\n                  accounts.map((a) => <MenuItem key={ a.thing.url } value={ a.thing.url }>{ a.title || a.name }</MenuItem>)\n                }\n              </Select>\n            </FormControl>\n          }\n        </Row>\n      }\n      <Spacer height='1em' />\n      <Button onClick={ () => onSubmit(note) } variant=\"outlined\" color=\"secondary\">Add</Button>\n      <Spacer height='.5em' />\n    </Column>\n  )\n}\n\nexport default NoteForm;","import { FOAF } from \"@inrupt/vocab-common-rdf\";\nimport { getAndParse, stringifyAndSet } from \"solid-core/dist/pods\";\n\nexport const notebookStruct = {\n  notes: {\n    predicate: FOAF.Document,\n    parse: getAndParse,\n    set: stringifyAndSet\n  }\n}\n\n// const note = {\n//   text: \"Message text.\",\n//   actionType: \"TRAN/UP\",\n//   value: number,\n//   account: \"url\",\n//   target: \"url\",\n//   recurring: false\n// }","import { Button, IconButton } from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { CardHeader, Pane, Row, Spacer } from \"solid-core/dist/components/styled\";\nimport { addToUpdateQueue, initThing, loadByName, SaveState, setAllAttr } from \"solid-core/dist/pods\";\nimport styled from \"styled-components\";\nimport { THEME } from \"../../util\";\nimport { accountStruct } from \"../accounts/accountStruct\";\nimport { bucketStruct } from \"../buckets/bucketStruct\";\nimport NoteForm, { ACTION_TYPES } from \"./NoteForm\";\nimport { notebookStruct } from './noteStruct'\n\n\nconst Notes = () => {\n\n  const { dataset, updateQueue, queue } = useContext(SaveState)\n  const [notebook, updateNotes] = useState({ notes: [] });\n  const [isAdding, setIsAdding] = useState(false);\n\n  useEffect(() => {\n    if (!dataset) return;\n    let data = loadByName(dataset, 'notes', notebookStruct);\n    if (!data) {\n      debugger\n      (async function () {\n        let data = await initThing('notes', { notes: [] }, notebookStruct)\n        updateNotes(data)\n      })()\n    } else {\n      updateNotes(data)\n    }\n  }, [dataset]);\n\n  function addNote(note) {\n    let updatedBook = { ...notebook, notes: [...notebook.notes, note] }\n    let thing = setAllAttr(updatedBook.thing, updatedBook);\n    updateQueue(addToUpdateQueue(queue, thing))\n    setIsAdding(false)\n    updateNotes({ ...updatedBook, thing })\n  }\n\n  function removeNote(i) {\n    let updatedBook = { ...notebook, notes: [...notebook.notes.slice(0, i), ...notebook.notes.slice(i + 1)] }\n    let thing = setAllAttr(updatedBook.thing, updatedBook);\n    updateNotes({ ...updatedBook, thing })\n    return thing;\n  }\n\n  function updateAccount(accountURL, value) {\n    let struct = accountURL.indexOf('account') >= 0 ? accountStruct : bucketStruct;\n    let account = loadByName(dataset, accountURL, struct)\n    account.balance = value + +account.balance;\n    return setAllAttr(account.thing, account);\n  }\n\n  function complete(i) {\n    return () => {\n      let note = notebook.notes[i]\n      let updates = [];\n      if (note.actionType === ACTION_TYPES.UPDATE) {\n        updates = [...updates, updateAccount(note.account, note.value)]\n      } else if (note.actionType === ACTION_TYPES.TRANSFER) {\n        updates = [...updates, updateAccount(note.account, note.value * -1)]\n        updates = [...updates, updateAccount(note.target, note.value)]\n      }\n      updates = [...updates, removeNote(i)]\n      updateQueue(updates.reduce((q, thing) => addToUpdateQueue(q, thing), queue))\n    }\n  }\n\n  return (\n    <Pane width=\"100%\">\n      <Row align=\"center\">\n        <CardHeader>Notes</CardHeader>\n        <Spacer />\n        <IconButton onClick={ () => setIsAdding(!isAdding) } color=\"primary\">\n          <span className=\"material-icons\">{ isAdding ? 'close' : 'add' }</span>\n        </IconButton>\n      </Row>\n      {\n        isAdding && <NoteForm onSubmit={ addNote } dataset={ dataset } />\n      }\n      {\n        notebook.notes.map((note, i) => (\n          <NoteCard key={ note.text }>\n            <Row align='center'>\n              { note.text }\n              <Spacer />\n              <Button color='secondary' onClick={ complete(i) }>{ note.actionType === ACTION_TYPES.NONE ? 'Done' : note.actionType }</Button>\n            </Row>\n          </NoteCard>\n        ))\n      }\n    </Pane>\n  )\n}\n\nexport default Notes;\n\nconst NoteCard = styled.div`\n  width: 90%;\n  padding: .5em;\n  border: solid 1px ${ THEME.secondary };\n  border-radius: 3px;\n  margin-bottom: .5em;\n`","import { Badge, IconButton, Input } from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Card, Pane, Row, Spacer, Title, CardHeader, Divider, Icon } from \"solid-core/dist/components/styled\";\nimport { initThing, setAttr, addToUpdateQueue, SaveState, loadAllByName } from \"solid-core/dist/pods\";\nimport styled from \"styled-components\";\nimport { THEME } from \"../../util\";\nimport BalanceInput from \"../BalanceInput\";\nimport Buckets from \"../buckets/Buckets\";\nimport AccountForm from \"./AccountForm\";\nimport { accountStruct } from \"./accountStruct\";\nimport Notes from '../notes/Notes'\nimport { bucketStruct } from \"../buckets/bucketStruct\";\n\nconst Accounts = () => {\n\n  const { queue, updateQueue, dataset, setDataset, setAccounts } = useContext(SaveState);\n\n  const [isAdding, setIsAdding] = useState(false)\n  const [editMode, updateEditMode] = useState(false)\n  const [accounts, updateAccounts] = useState([])\n  const [buckets, updateBuckets] = useState([])\n\n  useEffect(() => {\n    if (!dataset) return\n    updateAccounts(\n      loadAllByName(dataset, 'account', accountStruct)\n        .map(a => ({ ...a, details: !!a.details }))\n        .sort((a, b) => a.primary ? -1 : a.title.localeCompare(b.title)))\n    updateBuckets(\n      loadAllByName(dataset, 'bucket', bucketStruct)\n        .reduce(\n          (prev, curr) => (\n            { ...prev, [curr.account]: prev[curr.account] ? [...prev[curr.account], curr] : [curr] }\n          ), {})\n    )\n  }, [dataset])\n\n  useEffect(() => setAccounts(accounts), [accounts, setAccounts])\n\n  async function addAccount(acc) {\n    setIsAdding(false)\n    let { dataset, saved } = await initThing('account', acc, accountStruct)\n    updateAccounts([...accounts, { ...acc, saved }])\n    setDataset(dataset)\n  }\n\n  function updateAccount(acc, field) {\n    let i = accounts.findIndex(a => a.thing.url === acc.thing.url)\n    return value => {\n      let thing = setAttr(acc.thing, accountStruct[field], value)\n      if (thing) updateQueue(addToUpdateQueue(queue, thing))\n      else thing = acc.thing\n      updateAccounts([...accounts.slice(0, i), { ...acc, [field]: value, thing }, ...accounts.slice(i + 1)])\n    }\n  }\n\n  function sortBuckets(list) {\n    let bucketObject = list.reduce(\n      (prev, curr) => (\n        { ...prev, [curr.account]: prev[curr.account] ? [...prev[curr.account], curr] : [curr] }\n      ), {})\n    updateBuckets(bucketObject)\n  }\n\n  function bucketSum(title) {\n    if (!buckets || !buckets[title]) return 0;\n    return buckets[title].reduce((prev, curr) => +curr.balance + prev, 0)\n  }\n\n  return (\n    <Pane width='100%'>\n      <Card>\n        <Row align=\"center\">\n          <CardHeader>Accounts</CardHeader>\n          <Spacer />\n          <IconButton onClick={ () => updateEditMode(!editMode) } color=\"primary\">\n            <span className=\"material-icons\">{ editMode ? 'close' : 'edit' }</span>\n          </IconButton>\n          {\n            !editMode &&\n            <IconButton onClick={ () => setIsAdding(!isAdding) } color=\"primary\">\n              <span className=\"material-icons\">{ isAdding ? 'close' : 'add' }</span>\n            </IconButton>\n          }\n        </Row>\n        <Divider theme={ THEME } />\n        {\n          isAdding && <AccountForm onSubmit={ addAccount } />\n        }\n        {\n          accounts.map(a => (\n            <span key={ a.thing.url ? a.thing.url : a.title }>\n              <Row>\n                {\n                  !editMode ?\n                    <Title style={ { margin: 0 } }>{ a.title }</Title>\n                    : <Input value={ a.title } onChange={ e => updateAccount(a, \"title\")(e.target.value) } />\n                }\n                {\n                  (buckets && buckets[a.title] && !!buckets[a.title].length) &&\n                  <Icon theme={ THEME } onClick={ () => updateAccount(a, \"details\")(!a.details) }>\n                    <span className=\"material-icons\">{ a.details ? \"expand_less\" : \"expand_more\" }</span>\n                  </Icon>\n                }\n                <Spacer />\n                <Badge\n                  badgeContent={ +a.balance - bucketSum(a.title) }\n                  color=\"secondary\"\n                  invisible={ +a.balance - bucketSum(a.title) >= 0 }\n                >\n                  <BalanceInput\n                    onUpdate={ updateAccount(a, 'balance') }\n                    value={ a.balance } />\n                </Badge>\n              </Row>\n              {\n                (a.details && buckets && buckets[a.title]) &&\n                <AccountItem>\n                  <p>Available</p>\n                  <Spacer />\n                  <b>{ +a.balance - buckets[a.title].reduce((prev, curr) => +curr.balance + prev, 0) }</b>\n                </AccountItem>\n              }\n              {\n                (a.details && buckets && buckets[a.title]) &&\n                buckets[a.title]\n                  .sort((a, b) => a.name.localeCompare(b.name))\n                  .map(b => (\n                    <AccountItem key={ b.thing.url }>\n                      <p>{ b.name }</p>\n                      <Spacer />\n                      <p>{ b.balance }</p>\n                    </AccountItem>\n                  ))\n              }\n              <Divider thin={ true } theme={ THEME } />\n            </span>\n          ))\n        }\n      </Card>\n      <Buckets onUpdate={ sortBuckets } />\n      <Notes />\n    </Pane >\n  )\n}\n\nexport default Accounts;\n\nconst AccountItem = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: solid 1px whitesmoke;\n`","import { Button, Checkbox, FormControlLabel, Input } from \"@material-ui/core\"\nimport { useState } from \"react\";\nimport { Column, Row, Spacer } from \"solid-core/dist/components/styled\";\n\nconst Months = [\n  'jan',\n  'feb',\n  'mar',\n  'apr',\n  'may',\n  'jun',\n  'jul',\n  'aug',\n  'sep',\n  'oct',\n  'nov',\n  'dec'\n]\n\nconst BillForm = ({ onSubmit }) => {\n\n  const [bill, updateBill] = useState({ month: [] });\n  const [monthly, setMonthly] = useState(true);\n\n  function handleChange(field, min, max) {\n    return e => {\n      let value = e.target.value;\n      if (max || min) value = +value > max ? max : +value < min ? min : value;\n      updateBill({ ...bill, [field]: value })\n    }\n  }\n\n  function toggleMonthly(e) {\n    setMonthly(e.target.checked)\n    if (e.target.checked) updateBill({ ...bill, month: [] })\n  }\n\n  function toggleMonth(m) {\n    return () => {\n      let month = [...bill.month]\n      let i = month.indexOf(m);\n      if (i >= 0) {\n        updateBill({ ...bill, month: [...month.slice(0, i), ...month.slice(i + 1)] })\n      } else {\n        updateBill({ ...bill, month: [...month, m] })\n      }\n    }\n  }\n\n  return (\n    <Column>\n      <Row>\n        <Input onChange={ handleChange(\"title\") } style={ { flex: 2 } } placeholder=\"title\" />\n        <Input onChange={ handleChange(\"debit\") } style={ { flex: 1 } } type=\"number\" placeholder=\"debit\" />\n      </Row>\n      <Row align=\"center\">\n        <Spacer />\n        <Input\n          onChange={ handleChange(\"date\", 1, 28) }\n          type=\"number\"\n          placeholder=\"date\" />\n      </Row>\n      <FormControlLabel checked={ monthly } control={ <Checkbox onChange={ toggleMonthly } color=\"secondary\" /> } label=\"Monthly\" />\n      {\n        !monthly &&\n        <Column>\n          {\n            Months.map((m, i) => <FormControlLabel control={ <Checkbox onChange={ toggleMonth(i + 1) } color=\"primary\" /> } label={ m } />)\n          }\n\n        </Column>\n      }\n      <Button onClick={ () => onSubmit(bill) } variant=\"outlined\" color=\"secondary\">Add</Button>\n    </Column>\n  )\n}\n\nexport default BillForm;","import { getBoolean, getStringNoLocale, setBoolean, setStringNoLocale } from \"@inrupt/solid-client\";\nimport { FOAF, VCARD } from \"@inrupt/vocab-common-rdf\";\nimport { getAndParse, stringifyAndSet } from \"solid-core/dist/pods\";\n\nexport const billStruct = {\n  title: {\n    predicate: FOAF.name,\n    parse: getStringNoLocale,\n    set: setStringNoLocale\n  },\n  debit: {\n    predicate: VCARD.value,\n    parse: getStringNoLocale,\n    set: setStringNoLocale\n  },\n  date: {\n    predicate: VCARD.Date,\n    parse: getStringNoLocale,\n    set: setStringNoLocale\n  },\n  month: {\n    predicate: VCARD.note,\n    parse: getAndParse,\n    set: stringifyAndSet\n  },\n  inactive: {\n    predicate: VCARD.hasSource,\n    parse: getBoolean,\n    set: setBoolean\n  }\n}","import { Button, Input } from \"@material-ui/core\"\nimport { useEffect, useState } from \"react\";\nimport { Column, Row, Spacer } from \"solid-core/dist/components/styled\";\n\nconst SettingsForm = ({ onSubmit, savedSettings }) => {\n\n  const [settings, updateSettings] = useState({});\n\n  useEffect(() => {\n    if (savedSettings) updateSettings(savedSettings)\n  }, [savedSettings])\n\n  function handleChange(field) {\n    return e => {\n      let value = e.target.value;\n      updateSettings({ ...settings, [field]: value })\n    }\n  }\n\n  return (\n    <Column>\n      <Row>\n        <Input\n          value={ settings.payday || \"\" }\n          style={ { flex: \"2\" } }\n          onChange={ handleChange(\"payday\") }\n          placeholder=\"past payday (mm/dd/yyyy)\" />\n        <Spacer width='1em' />\n        <Input\n          value={ settings.paycheck || \"\" }\n          style={ { flex: \"1\" } }\n          onChange={ handleChange(\"paycheck\") }\n          type=\"number\"\n          placeholder=\"paycheck\" />\n      </Row>\n      <Button style={ { marginTop: \"1em\" } } onClick={ () => onSubmit(settings) } variant=\"outlined\" color=\"secondary\">Save</Button>\n    </Column>\n  )\n}\n\nexport default SettingsForm;","import { getStringNoLocale, setStringNoLocale } from \"@inrupt/solid-client\";\nimport { VCARD } from \"@inrupt/vocab-common-rdf\";\n\nexport const settingsStruct = {\n  payday: {\n    predicate: VCARD.Date,\n    parse: getStringNoLocale,\n    set: setStringNoLocale\n  },\n  paycheck: {\n    predicate: VCARD.value,\n    parse: getStringNoLocale,\n    set: setStringNoLocale\n  }\n}","import { Checkbox, FormControlLabel, IconButton, Input } from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Card, CardHeader, Column, Divider, Icon, Pane, Row, Spacer } from \"solid-core/dist/components/styled\"\nimport { addToUpdateQueue, deleteThing, initThing, loadAllByName, loadByName, SaveState, saveThing, setAllAttr } from \"solid-core/dist/pods\";\nimport styled from \"styled-components\";\nimport { asMoney, getDebitBefore, getNextPayDate, THEME } from \"../../util\"\nimport BillForm from \"./BillForm\";\nimport { billStruct } from \"./billStruct\";\nimport SettingsForm from \"./SettingsForm\";\nimport { settingsStruct } from \"./settingsStruct\";\n\nconst BillSchedule = () => {\n\n  const { dataset, setDataset, accounts, buckets, queue, updateQueue } = useContext(SaveState)\n\n  const [isAdding, setIsAdding] = useState(false)\n  const [danger, setDanger] = useState(false)\n  const [settings, updateSettings] = useState({})\n  const [editSettings, setEditSettings] = useState(false)\n  const [bills, updateBills] = useState([]);\n  const [account, updateAccount] = useState(null);\n  const [primaryBuckets, updatePrimaryBuckets] = useState(null);\n  const [now] = useState(new Date());\n\n  useEffect(() => {\n    if (!dataset) return\n    updateBills(loadAllByName(dataset, 'bill', billStruct).sort((a, b) => +a.date - +b.date))\n    updateSettings(loadByName(dataset, 'settings', settingsStruct))\n  }, [dataset])\n\n  useEffect(() => {\n    if (accounts) updateAccount(accounts.find(a => a.primary))\n  }, [accounts])\n\n  useEffect(() => {\n    if (account && buckets) updatePrimaryBuckets(buckets.filter(b => b.account === account.title))\n  }, [account, buckets])\n\n  function toggleBill(b) {\n    if (!b.thing) return\n    let i = bills.findIndex(bill => bill.thing.url === b.thing.url)\n    updateBills([\n      ...bills.slice(0, i),\n      { ...b, override: !b.override },\n      ...bills.slice(i + 1)\n    ])\n  }\n\n  function toggleActive(bill) {\n    return () => {\n      let i = bills.findIndex(b => bill.thing.url === b.thing.url)\n      let thing = setAllAttr(bill.thing, { ...bill, inactive: !bill.inactive })\n      updateQueue(addToUpdateQueue(queue, thing))\n      updateBills([...bills.slice(0, i), { ...bill, inactive: !bill.inactive, thing }, ...bills.slice(i + 1)])\n    }\n  }\n\n  function updateBill(bill, field, numeric) {\n    return e => {\n      let i = bills.findIndex(b => bill.thing.url === b.thing.url)\n      let value = numeric ? +e.target.value : e.target.value;\n      let thing = setAllAttr(bill.thing, { ...bill, [field]: value })\n      updateQueue(addToUpdateQueue(queue, thing))\n      updateBills([...bills.slice(0, i), { ...bill, [field]: value, thing }, ...bills.slice(i + 1)])\n    }\n  }\n\n  async function addBill(bill) {\n    setIsAdding(false)\n    let { dataset, thing } = await initThing('bill', bill, billStruct)\n    updateBills(\n      [...bills, { ...bill, thing }]\n        .sort((a, b) => +a.date - +b.date)\n    )\n    setDataset(dataset)\n  }\n\n  async function deleteBill(b) {\n    let i = bills.findIndex(bill => bill.thing.url === b.thing.url)\n    let { dataset } = await deleteThing(b.thing)\n    updateBills([\n      ...bills.slice(0, i),\n      ...bills.slice(i + 1)\n    ])\n    setDataset(dataset)\n  }\n\n  async function saveSettings(s) {\n    debugger\n    let thing, dataset;\n    if (!settings.thing) {\n      ({ dataset, thing } = await initThing('settings', s, settingsStruct))\n    } else {\n      thing = setAllAttr(settings.thing, s);\n      ({ dataset, saved: thing } = await saveThing(thing))\n    }\n    updateSettings({ ...s, thing })\n    setDataset(dataset)\n    setEditSettings(false)\n  }\n\n  function buildPayDays() {\n    if (!settings.payday && !settings.paycheck) return []\n    const d = new Date(now.getTime());\n    let date = getNextPayDate(new Date(settings.payday), d);\n    d.setDate(date);\n    date = d.getDate();\n    let days = [];\n\n    for (let i = 0; i < 3; i++) {\n      days.push({\n        title: \"Payday\",\n        credit: +settings.paycheck,\n        date,\n        month: d.getMonth() + 1,\n      })\n      d.setDate(date + 14);\n      date = d.getDate();\n    }\n\n    return days;\n  }\n\n  // MAIN READOUT ==============\n  function buildSchedule() {\n    if (!account || !bills.length) return <></>\n\n    let bucketSum = primaryBuckets ? primaryBuckets.reduce((sum, next) => +next.balance + sum, 0) : 0;\n    let runningBalance = +account.balance - bucketSum;\n    let minBalance = runningBalance;\n\n    // GET PAYDAYS\n    let paydays = buildPayDays()\n\n    let readout = [];\n\n    let daysAdded;\n    for (daysAdded = 0; daysAdded < 31; daysAdded++) {\n      // update date to get month and date\n      let currDate = new Date(now.getTime())\n      currDate.setDate(now.getDate() + daysAdded)\n      let month = currDate.getMonth() + 1;\n\n      // get list of bills for month/date\n      let dailyBills = bills\n        .filter(b => (\n          +b.date === currDate.getDate())\n          && (\n            ((!b.month || !b.month.length || b.month.includes(month)) && !b.inactive)\n            || danger\n          ))\n        // eslint-disable-next-line\n        .map(b => {\n          runningBalance -= b.debit\n          minBalance = runningBalance < minBalance ? runningBalance : minBalance\n          return (\n            <ScheduleRow key={ b.title + b.date }>\n              <Column>\n                <Row>\n                  <DateText>{ !danger || (!b.month || !b.month.length) ? month : `(${ b.month.join('|') })` }/{ b.date }</DateText>\n                  <p className=\"clickable\" onClick={ () => toggleBill(b) }>{ b.title }</p>\n                </Row>\n                {\n                  danger &&\n                  <FormControlLabel\n                    checked={ !b.inactive }\n                    control={ <Checkbox onChange={ toggleActive(b) } color=\"secondary\" /> } label=\"Active\"\n                  />\n                }\n              </Column>\n              <Spacer />\n              <Column align=\"flex-end\">\n                {\n                  !danger ?\n                    <Debit>({ b.debit })</Debit>\n                    : <Input style={ { width: 75 } } type=\"number\" onChange={ updateBill(b, 'debit', true) } value={ b.debit } />\n                }\n                { !danger && <p style={ { margin: 0 } }>{ asMoney(runningBalance).dollar }</p> }\n              </Column>\n              {\n                (danger && b.debit) &&\n                <IconButton onClick={ () => deleteBill(b) } color=\"secondary\">\n                  <span className=\"material-icons\">delete</span>\n                </IconButton>\n              }\n            </ScheduleRow>\n          )\n        }\n        )\n\n      readout = [\n        ...readout,\n        ...dailyBills\n      ]\n\n      // get payday for month/date\n      let payday = paydays.find(p => p.month === month && p.date === currDate.getDate())\n      if (payday) {\n        runningBalance += payday.credit\n        readout = [\n          ...readout,\n          <ScheduleRow key={ payday.title + payday.date } className='credit'>\n            <DateText>{ month }/{ payday.date }</DateText>\n            <p>{ payday.title }</p>\n            <Spacer />\n            <Column align=\"flex-end\">\n              <Credit>({ payday.credit })</Credit>\n              <p style={ { margin: 0 } }>{ asMoney(runningBalance).dollar }</p>\n            </Column>\n          </ScheduleRow>\n        ]\n      }\n    }\n\n\n    if (!settings.payday && !settings.paycheck) {\n      return [\n        <Row key=\"info\">\n          <Icon className=\"material-icons\">warning</Icon>\n          For full readout please enter estimated paycheck value and a past pay date in settings.\n        </Row>,\n        ...readout\n      ]\n    }\n\n    let currDate = new Date(now.getTime())\n    currDate.setDate(now.getDate() + daysAdded)\n    let nextPayday = paydays[paydays.length - 1];\n    let availableFunds = runningBalance - getDebitBefore(bills, currDate.getDate(), nextPayday.date, nextPayday.month)\n\n    readout = [\n      <Display key=\"op-budget\">\n        <Icon className=\"material-icons\">info</Icon>\n        Available in { account.title }: <b>{ availableFunds < minBalance ? asMoney(availableFunds).full : asMoney(minBalance).full }</b>\n      </Display>,\n      ...readout\n    ]\n\n    return readout;\n  }\n\n  // RENDER ==================================\n  return (\n    <Pane width='100%'>\n      <Card>\n        <Row align=\"center\">\n          <CardHeader>Bill Schedule</CardHeader>\n          <Spacer />\n          <IconButton onClick={ () => setDanger(!danger) } color=\"primary\">\n            <span className=\"material-icons\">{ danger ? 'done' : 'edit' }</span>\n          </IconButton>\n          <IconButton onClick={ () => setEditSettings(!editSettings) } color=\"primary\">\n            <span className=\"material-icons\">settings</span>\n          </IconButton>\n          <IconButton onClick={ () => setIsAdding(!isAdding) } color=\"primary\">\n            <span className=\"material-icons\">{ isAdding ? 'close' : 'add' }</span>\n          </IconButton>\n        </Row>\n        <Divider theme={ THEME } />\n        {\n          editSettings &&\n          <SettingsForm onSubmit={ saveSettings } savedSettings={ settings } />\n        }\n        {\n          isAdding &&\n          <BillForm onSubmit={ addBill } />\n        }\n        {\n          buildSchedule()\n        }\n      </Card>\n    </Pane>\n  )\n}\n\nexport default BillSchedule;\n\nconst ScheduleRow = styled.div`\n  display: flex;\n  border-bottom: solid 1px ${ THEME.dark }44;\n  padding: 5px;\n  border-radius: 3px;\n  &.paid {\n    opacity: .5;\n  }\n  &.credit {\n    background: ${ THEME.secondary + \"30\" };\n  }\n`\n\nconst Credit = styled.p`\n  color: green;\n`\n\nconst Debit = styled.p`\n  color: red;\n`\n\nconst Display = styled.div`\n  display: flex;\n  align-items: center;\n  font-style: italic;\n  margin-bottom: .5em;\n`\n\nconst DateText = styled.p`\n  font-weight: 100;\n  margin-right: .2em;\n`","import { useContext, useEffect, useState } from \"react\"\nimport { Card, CardHeader, Column, Divider, Icon, Pane, Row, Spacer, Title } from \"solid-core/dist/components/styled\"\nimport { loadAllByName, loadByName, SaveState } from \"solid-core/dist/pods\"\nimport styled from \"styled-components\"\nimport { getDebitBefore, getNextPayDate, THEME, Credit, Debit, Info, asMoney } from \"../../util\"\nimport { billStruct } from \"../schedule/billStruct\"\nimport { settingsStruct } from \"../schedule/settingsStruct\"\n\nconst MONTHS = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n]\n\nconst BigPicture = () => {\n\n  const { dataset } = useContext(SaveState);\n  const [settings, updateSettings] = useState(null);\n  const [bills, updateBills] = useState([]);\n  const [now] = useState(new Date());\n\n  useEffect(() => {\n    if (!dataset) return\n    updateSettings(loadByName(dataset, 'settings', settingsStruct))\n    updateBills(loadAllByName(dataset, 'bill', billStruct))\n  }, [dataset]);\n\n  if (!settings) return <></>\n\n  function getPaydayCount() {\n    let counter = {};\n\n    let date = new Date(now.getTime());\n    date.setDate(getNextPayDate(new Date(settings.payday), now))\n\n    // GET TO NEXT MONTH\n    while (date.getMonth() === now.getMonth()) {\n      date.setDate(date.getDate() + 14)\n    }\n\n    // CONTINUE FOR 12 MONTHS\n    while (date.getMonth() !== now.getMonth()) {\n      let m = date.getMonth();\n      counter[MONTHS[m]] = counter[MONTHS[m]] ? counter[MONTHS[m]] + 1 : 1;\n      date.setDate(date.getDate() + 14)\n    }\n\n    return counter;\n  }\n\n  function buildReadout() {\n    let paydays = getPaydayCount();\n    let month = now.getMonth() >= 11 ? 0 : now.getMonth() + 1;\n    let readout = [];\n    let totalCredit = 0;\n    let totalDebit = 0;\n    while (month !== now.getMonth()) {\n      let credit = +settings.paycheck * paydays[MONTHS[month]];\n      totalCredit += credit;\n      let debit = getDebitBefore(bills, 0, 31, month + 1)\n      totalDebit += debit;\n\n      readout = [...readout,\n      <div key={ MONTHS[month] }>\n        <Row>\n          <Title>\n            {\n              paydays[MONTHS[month]] > 2 &&\n              <Decoration className=\"material-icons\">\n                auto_awesome\n              </Decoration>\n            }\n            { MONTHS[month] }\n          </Title>\n          <Spacer />\n          <Column align=\"center\">\n            <h3>{ asMoney(credit - debit).dollar }</h3>\n            <Credit>{ asMoney(credit).dollar }</Credit>\n            <Debit>({ asMoney(debit).dollar })</Debit>\n          </Column>\n        </Row>\n        <Divider theme={ THEME } />\n      </div>\n      ]\n      month = month >= 11 ? 0 : month + 1;\n    }\n    return [\n      readout,\n      <Info key=\"money-usage\">\n        <Icon className=\"material-icons\">info</Icon>\n        Money with a Job: <b>{ Math.round((totalDebit / totalCredit) * 100) }%</b>\n      </Info>\n    ]\n  }\n\n  return (\n    <Pane width='100%'>\n      <Card>\n        <CardHeader>BigPicture</CardHeader>\n        <Divider theme={ THEME } />\n        {\n          buildReadout()\n        }\n      </Card>\n    </Pane>\n  )\n}\n\nexport default BigPicture;\n\nconst Decoration = styled.span`\n        font-size: .7em;\n        position: absolute;\n        top: -.3em;\n        right: -1em;\n        color: ${ THEME.secondary }\n        `","import { IconButton } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SaveButton from \"solid-core/dist/components/SaveButton\";\nimport { HeaderBar, Spacer } from \"solid-core/dist/components/styled\";\nimport { SaveState } from \"solid-core/dist/pods\";\nimport styled from \"styled-components\";\nimport { AppTheme, THEME } from \"../util\";\nimport Accounts from \"./accounts/Accounts\";\nimport BillSchedule from \"./schedule/BillSchedule\";\nimport BigPicture from \"./year/BigPicture\";\n\nconst Dashboard = ({ user }) => {\n\n  const { queue, saveFromQ } = useContext(SaveState);\n  const { mui } = useContext(AppTheme);\n\n  return (\n    <Layout>\n      <HeaderBar theme={ THEME }>\n        <h2>{ user ? `${ user.name }'s` : \"My\" } Budget</h2>\n        <Spacer />\n        <Link to=\"/profile\">\n          <IconButton color=\"inherit\"><span className=\"material-icons\">person</span></IconButton>\n        </Link>\n      </HeaderBar>\n      <Content>\n        <Accounts />\n        <BillSchedule />\n        <BigPicture />\n      </Content>\n      <SaveButton ui={ mui } save={ saveFromQ } queue={ queue } />\n    </Layout>\n  )\n}\n\nexport default Dashboard;\n\nconst Layout = styled.div`\n  background: ${ THEME.light };\n  height: 100%;\n  display: grid;\n  grid-template-rows: 5.2em 1fr;\n  grid-template-areas: \n  \"header\"\n  \"main\";\n  `\n\nconst Content = styled.div`\n  background: ${ THEME.light };\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 400px));\n  justify-content: center; \n  grid-area: main;\n`","import React from 'react';\nimport './App.css';\nimport {\n  Main,\n  appLogin,\n  getDomain,\n  loadDataset,\n  loadThing,\n  save,\n  SaveState,\n  Profile,\n  profileStruct,\n  newTheme\n} from 'solid-core';\nimport { useEffect, useState } from 'react';\nimport { handleIncomingRedirect, getDefaultSession } from '@inrupt/solid-client-authn-browser';\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom';\nimport * as mui from '@material-ui/core';\nimport Dashboard from './components/Dashboard';\nimport { AppTheme, THEME } from './util';\n\nconst muiTheme = newTheme(THEME)\n\nfunction App() {\n\n  const [err, setError] = useState();\n  const [dataset, setDataset] = useState();\n  const [accounts, setAccounts] = useState();\n  const [buckets, setBuckets] = useState();\n  const [queue, updateQueue] = useState([]);\n  // PROFILE STATE\n  const [user, setUser] = useState();\n  const [profile, setProfile] = useState();\n  const [edit, toggleEdit] = useState(false);\n\n  async function saveFromQ() {\n    let res = await save(queue);\n    setDataset(res);\n    updateQueue([]);\n  }\n\n  useEffect(() => {\n    const getUser = async function () {\n      await handleIncomingRedirect()\n      let { info } = getDefaultSession()\n      if (info.isLoggedIn) setUser(info.webId)\n      else appLogin()\n    }\n    getUser()\n  }, [err])\n\n  // USER LOADED => GET SESSION\n  useEffect(() => {\n    if (user) {\n      // LOAD PROFILE\n      loadThing(user, profileStruct)\n        .then(res => {\n          if (res instanceof Error) {\n            console.error(res)\n            setError(res)\n          }\n          else setProfile(res)\n        })\n    }\n  }, [user])\n\n  // SESSION CONFIRMED => GET DATA\n  useEffect(() => {\n    if (profile) {\n      // LOAD BUDGET DATASET\n      loadDataset(getDomain(user) + \"/budget\")\n        .then(setDataset);\n    }\n  }, [profile, user])\n\n  return (\n    <SaveState.Provider value={ {\n      queue,\n      updateQueue,\n      saveFromQ,\n      dataset,\n      setDataset,\n      accounts,\n      setAccounts,\n      buckets,\n      setBuckets\n    } }>\n      <AppTheme.Provider value={ { ...THEME, mui } }>\n        <mui.ThemeProvider theme={ muiTheme }>\n          <Main>\n            <Router>\n              <Routes>\n                <Route path=\"/\" element={ <Dashboard user={ profile } /> } />\n                <Route path=\"/profile\"\n                  element={\n                    <SaveState.Consumer>\n                      {\n                        saveState => (\n                          <Profile\n                            profile={ profile }\n                            edit={ edit }\n                            toggleEdit={ toggleEdit }\n                            ui={ mui }\n                            theme={ THEME }\n                            saveState={ saveState }\n                            onChange={ setProfile }\n                          />\n                        )\n                      }\n                    </SaveState.Consumer>\n                  } />\n              </Routes>\n            </Router>\n          </Main>\n        </mui.ThemeProvider>\n      </AppTheme.Provider>\n    </SaveState.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}